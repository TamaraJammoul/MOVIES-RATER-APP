{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\movie-rater-web\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { withCookies } from \"react-cookie\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      credentials: {\n        usarname: \"\",\n        password: \"\"\n      },\n      isLogin: true\n    };\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n\n    this.login = () => {\n      if (this.state.isLogin) {\n        fetch(`${process.env.REACT_APP_API_URL}/auth/`, {\n          method: \"POST\",\n          headers: {\n            content_type: \"application/json\"\n          },\n          body: JSON.stringify(this.state.credentials)\n        }).then(resp => resp.json()).then(resp => {\n          this.props.cookies.set(\"mr_token\", resp.token);\n          window.location.href = \"/movies\";\n        }).catch(error => console.log(error));\n      } else {}\n    };\n\n    this.toggleview = () => {\n      this.setState({\n        isLogin: !this.state.isLogin\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.state.isLogin ? \"Login\" : \"Sign up\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.credentials.usarname,\n      onChange: this.inputChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.credentials.password,\n      onChange: this.inputChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.state.isLogin ? \"Login\" : \"Sign up\"), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.toggleview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.state.isLogin ? \"Create Account\" : \"back to login\"));\n  }\n\n}\n\nexport default withCookies(Login);","map":{"version":3,"sources":["C:/Users/asus/Desktop/movie-rater-web/src/components/Login.js"],"names":["React","Component","withCookies","Login","state","credentials","usarname","password","isLogin","inputChanged","event","cred","target","name","value","setState","login","fetch","process","env","REACT_APP_API_URL","method","headers","content_type","body","JSON","stringify","then","resp","json","props","cookies","set","token","window","location","href","catch","error","console","log","toggleview","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nclass Login extends Component {\r\n  state = {\r\n    credentials: {\r\n      usarname: \"\",\r\n      password: \"\",\r\n    },\r\n    isLogin: true,\r\n  };\r\n  inputChanged = (event) => {\r\n    let cred = this.state.credentials;\r\n    cred[event.target.name] = event.target.value;\r\n    this.setState({ credentials: cred });\r\n  };\r\n  login = () => {\r\n    if (this.state.isLogin) {\r\n      fetch(`${process.env.REACT_APP_API_URL}/auth/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          content_type: \"application/json\",\r\n        },\r\n        body: JSON.stringify(this.state.credentials),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n          this.props.cookies.set(\"mr_token\", resp.token);\r\n          window.location.href = \"/movies\";\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n    }\r\n  };\r\n  toggleview = () => {\r\n    this.setState({ isLogin: !this.state.isLogin });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <h1>{this.state.isLogin ? \"Login\" : \"Sign up\"}</h1>\r\n        <span>Title</span>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.credentials.usarname}\r\n          onChange={this.inputChanged}\r\n        />\r\n        <br />\r\n        <span>Password</span>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.credentials.password}\r\n          onChange={this.inputChanged}\r\n        />\r\n        <button onClick={this.login}>\r\n          {this.state.isLogin ? \"Login\" : \"Sign up\"}\r\n        </button>\r\n        <p onClick={this.toggleview}>\r\n          {this.state.isLogin ? \"Create Account\" : \"back to login\"}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withCookies(Login);\r\n"]},"metadata":{},"sourceType":"module"}